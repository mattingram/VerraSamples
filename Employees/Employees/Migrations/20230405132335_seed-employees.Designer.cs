// <auto-generated />
using System;
using Employees.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Employees.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20230405132335_seed-employees")]
    partial class seedemployees
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Employees.Models.Employee", b =>
                {
                    b.Property<Guid>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpFname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpLname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("EmpId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmpId = new Guid("8c6e2da6-ce23-4b6f-b980-348fb630c3eb"),
                            Address = "123 street",
                            DOB = new DateTime(2023, 4, 5, 13, 23, 35, 509, DateTimeKind.Utc).AddTicks(4706),
                            Department = "dept",
                            EmpFname = "Matt",
                            EmpLname = "Ingram",
                            Gender = "Male",
                            ProjectId = new Guid("ef7a7e47-3a9a-4e85-b23b-8b9724581793")
                        },
                        new
                        {
                            EmpId = new Guid("16975232-3c77-4d04-b6a4-e487c7543a1b"),
                            Address = "999 street",
                            DOB = new DateTime(2000, 1, 1, 4, 0, 0, 0, DateTimeKind.Utc),
                            Department = "dept2",
                            EmpFname = "Bob",
                            EmpLname = "Smith",
                            Gender = "Female",
                            ProjectId = new Guid("26c6f55c-ad3b-4a4d-9e44-1b60fc755b70")
                        });
                });

            modelBuilder.Entity("Employees.Models.EmployeePosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmpPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("EmployeePositions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c6e2da6-ce23-4b6f-b980-348fb630c3eb"),
                            DateOfJoining = new DateTime(2022, 2, 1, 4, 0, 0, 0, DateTimeKind.Utc),
                            EmpPosition = "Manager",
                            Salary = 5m
                        },
                        new
                        {
                            Id = new Guid("16975232-3c77-4d04-b6a4-e487c7543a1b"),
                            DateOfJoining = new DateTime(2023, 3, 1, 4, 0, 0, 0, DateTimeKind.Utc),
                            EmpPosition = "Consultant",
                            Salary = 5000000m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
